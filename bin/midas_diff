#!/usr/bin/env ruby

require File.expand_path '../../lib/miwomi', __FILE__

def exit!(reason='', code=1)
  $stderr.puts <<-EOHELP
  #{reason}
  try --help
  EOHELP
  exit code
end

if __FILE__ == $0
  options = Miwomi::Patch.default_opts

  option_parser = OptionParser.new do |opts|
    opts.banner = "Usage: $0 FROM_FILE TO_FILE"

    opts.separator ""
    opts.separator "Specific options:"

    opts.on '-i', '--ignore STRING',
            "Ignore name including STRING",
            "(for example eloraam.redpower)" do |v|
      options.ignore << v
    end

    opts.on '-d', '--drop x,y,z', Array, "Ignore blocks/items by id" do |list|
      options.ignore_ids = list.map(&:to_i)
    end

    opts.separator ""
    opts.separator "Common options:"

    # No argument, shows at tail.  This will print an options summary.
    # Try it and see!
    opts.on_tail("-h", "--help", "Show this message") do
      puts opts
      exit
    end
  end

  option_parser.parse!

  from_file = ARGV.shift || exit!('could not find source file')
  to_file   = ARGV.shift || exit!('could not find target file')

  exit!("trailing filenames: #{ARGV.join(' ')}") unless ARGV.empty?

  from = Miwomi::Parser.parse_file from_file
  to   = Miwomi::Parser.parse_file to_file

  patch = Miwomi::Patch.new from, to
  begin
    patch.apply(options)

    $stdout.print patch.to_midas
  rescue Miwomi::Patch::Error => e
    $stderr.puts e.message
    exit 2
  end
end
